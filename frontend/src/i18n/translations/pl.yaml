common:
  refresh: Odśwież
  next: Dalej
  previous: Wstecz
  error: Błąd
  add: Dodaj
  loading: Ładowanie...
  remove: Usuń
  notification:
    updateSuccessfully: Zaktualizowano pomyślnie
    errorDuringUpdate: Błąd podczas aktualizacji
gameWizard:
  name: Nazwa
  createGame: Stwórz grę
  creating: Tworzenie...
  errorWhileCreatingGame: Błąd podczas tworzenia gry :(
  addLogo: Dodaj logo
  playerCount: Liczba graczy
  description: Opis
scriptWizard:
  noDescription: Brak opisu...
  description: Opis
  joinMatch: Dołącz do gry
  joiningMatch: Dołączanie do gry...
  newScript: Nowy skrypt
matchFrame:
  errorWhileParsingFrame: Błąd podczas parsowania ramki :(
spriteList:
  addSprite: Dodaj grafikę
  addSpriteDialog:
    name: Name
ratingForm:
  send: Wyślij ocenę
  edit: Edytuj ocenę
navigationBar:
  dashboard: Panel
  createGame: Stwórz grę
  games: Gry
  profile: Profil
  tutorial: Poradnik
searchList:
  name: Nazwa
  nothingFound: Nic nie znaleziono
gameDetails:
  myScripts: Moje skrypty
  scriptTesting: Testowanie skrytptów
  newTournament: Nowy turniej
  tournaments: Turnieje
  newMatch: Nowy mecz
  matches: Mecze
  sprites: Grafiki
myScripts:
  noScripts: Nie masz żadnych skryptów do tej gry
scriptDetails:
  update: Aktualizuj
scriptTesting:
  save: Zapisz
  newScript: Nowy skrypt
  test: Testuj
  refresh: Odśwież
  chooseScriptsToTest: Wybierz skrypty to testu
authorization:
  action:
    login: Zaloguj się
    logout: Wyloguj się
matchList:
  winner: Zwycięzca
  player: Gracz
  noMatches: Brak meczów
matchWizard:
  name: Nazwa
  createMatch: Stwórz mecz
  creating: Tworzenie...
matchDetails:
  joinToMatch: Dołącz do meczu
tournamentWizard:
  createTournament: Stwórz turniej
  creating: Tworzenie...
  errorWhileCreatingTournament: Błąd podczas tworzenia gry :(
tournamentList:
  noTournaments: Brak turniejów
tournamentDetails:
  joinToTournament: Dołącz do turnieju
  detailsOfTournament: Szczegóły turnieju
tournamentJoin:
  joinToTournament: Dołącz do turnieju
  joiningToTournament: Dołączanie do turnieju
tutorial:
  howToMakeGame:
    header: Jak tworzyć grę?
    description: "Tworzenie gier możliwe jest wyłączenie w języku JavaScript, można jednak skorzystać z innych języków, które są kompilowane do JavaScript, np. TypeScript, Dart. Nie narzucono sztywnego interfejsu, który musi spełniać kod gry, aby ułatwić tworzenie różnorodnych rozwiązań. Do dyspozycji twórców udostępniono zbiór funkcji, które mogę zostać wykorzystane w dowolnym miejscu ich kodu, umożliwiając komunikację z platformą i kodem graczy."
    functions:
      description: "Funkcję dostępne dla twórców gier:"
      fn1:
        key: "countOfPlayers() : number"
        value: "Zwraca ilość graczy uczestniczących w aktualnej rozgrywce"
      fn2:
        key: "runPlayerScript(playerIndex: any, gameState: any) : any"
        value: "Zwraca obiekt odpowiedzi wygenerowany przez kod gracza o wskazanym indeksie, dodatkowo umożliwia przekazanie mu dowolnego obiektu stanu, który nie musi być identyczny dla każdego gracza. Obiekt gameState, powinien zostać szczegółowo opisany w sposób zrozumiały dla osób, które będą korzystać z gry"
      fn3:
        key: "end(newWinderIndex: any): void"
        value: "Kończy rozgrywkę, wybiera gracza o wskazanym indeksie jako zwycięzcę gry. Po wywołaniu tej funkcji, kod gry powinien zostać zakończony."
      fn4:
        key: "emitFrame(frame: any) : any"
        value: "Zapisuje pojedynczą ramkę w formacie tekstowym lub graficznym, która po zakończeniu rozgrywki będzie możliwa do wyświetlania przez uczestników. Jako parametr należy podać obiekt zawierający następującego pola:"
        fn1:
          key: "mode"
          value: "Rodzaj ramki („text” lub „2d”)"
        fn2:
          key: "output"
          value: "Tylko w przypadku ramki typu „text”, pole zawiera tekst do wyświetlenia"
        fn3:
          key: "width"
          value: "Tylko w przypadku ramki typu „2d”, pole zawiera szerokość grafiki"
        fn4:
          key: "height"
          value: "Tylko w przypadku rami typu „2d”, pole zawiera wysokość grafiki"
        fn5:
          key: "objects"
          value: "Tylko w przypadku ramki typu „2d”"
          fn1:
            key: "x"
            value: "Położenie „x” obiektu"
          fn2:
            key: "y"
            value: "Położenie „y” obiektu"
          fn3:
            key: "width"
            value: "Szerokość obrazka"
          fn4:
            key: "height"
            value: "Wysokość obrazka"
          fn5:
            key: "sprite"
            value: "Nazwa obiektu do wyświetlenia"
  howToPlayGame:
    header: Jak wziąć udział w grze?
    description: "Tworzenie botów uczestniczących w grach odbywa się na takich zadach jak tworzenie gier. Kod uruchamiany jest jednak za każdym wywołaniem funkcji runPlayerScript od nowa, dlatego nie może zawierać nieskończonych pętli, a przechowywanie stanu wymaga użycia wbudowanych metod: loadState i saveState. Każdy cykl musi zostać zakończony w ściśle określonym czasie, w przeciwnym wypadku gra zakończy się niepowodzeniem."
    functions:
      description: "Funkcje dostępne dla graczy:"
      fn1:
        key: "getGameState(): any"
        value: "Zwraca obiekt stanu gry, podany przez twórcę gry podczas wywołania funkcji runPlayerScript"
      fn2:
        key: "saveState(state: any): any"
        value: "Funkcja zapisuje dowolny obiekt, który gracz chce przechować pomiędzy kolejnymi wywołanymi jego skryptu"
      fn3:
        key: "loadState(): any"
        value: "Funkcja zwraca stan zapisany wcześniej przez gracza"
      fn4:
        key: "answer(playerAnswer: any) : an"
        value: "Funkcja zwraca odpowiedź, która powinna być zgodna ze schematem określonym przez twórcę gry. Powinna być to ostatnia wywołana funkcja w skrypcie"
